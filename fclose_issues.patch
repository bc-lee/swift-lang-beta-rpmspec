--- swift-tools-support-core/Sources/TSCBasic/FileSystem.swift.orig	2023-12-12 21:00:36.129189000 +0000
+++ swift-tools-support-core/Sources/TSCBasic/FileSystem.swift	2023-12-12 21:04:32.274597013 +0000
@@ -495,19 +495,19 @@
         if fp == nil {
             throw FileSystemError(errno: errno, path)
         }
-        defer { fclose(fp) }
+        defer { fclose(fp!) }
 
         // Read the data one block at a time.
         let data = BufferedOutputByteStream()
         var tmpBuffer = [UInt8](repeating: 0, count: 1 << 12)
         while true {
-            let n = fread(&tmpBuffer, 1, tmpBuffer.count, fp)
+            let n = fread(&tmpBuffer, 1, tmpBuffer.count, fp!)
             if n < 0 {
                 if errno == EINTR { continue }
                 throw FileSystemError(.ioError(code: errno), path)
             }
             if n == 0 {
-                let errno = ferror(fp)
+                let errno = ferror(fp!)
                 if errno != 0 {
                     throw FileSystemError(.ioError(code: errno), path)
                 }
@@ -525,12 +525,12 @@
         if fp == nil {
             throw FileSystemError(errno: errno, path)
         }
-        defer { fclose(fp) }
+        defer { fclose(fp!) }
 
         // Write the data in one chunk.
         var contents = bytes.contents
         while true {
-            let n = fwrite(&contents, 1, contents.count, fp)
+            let n = fwrite(&contents, 1, contents.count, fp!)
             if n < 0 {
                 if errno == EINTR { continue }
                 throw FileSystemError(.ioError(code: errno), path)
